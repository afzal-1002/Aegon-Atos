Attribute VB_Name = "modError"
    Option Explicit

    '------------------------------------------------------------------------
    'Comments:      : Handles any Errors Raised during the course of code
    '                 execution.  If a new error needs to be dealt with in a
    '                 specific way, you will need to allocate the next
    '                 available error number to it and create a specific
    '                 description.  Specific error numbers start at 50000.
    '                 You need only add details for those errors that are
    '                 handled spearately in your code.  If unexpected
    '                 errors occur, these will be reported with the details
    '                 generated by the application under the Case Else
    'Arguments:     : None
    'Date             Developer                  Action
    '------------------------------------------------------------------------
    '25/01/2010       Paul Humphreys             Created
    '28/01/2011       Maili Konczak              Call modUtility.RecordErrorLog added at line 60
    '------------------------------------------------------------------------
    Public Sub Handler()
        
        'declare local variable for the Error Message String
        Dim sErrorMsg As String
        
        'Write the error in log file
        'modUtility.RecordErrorLog
        'then set it according to the details stored on the gErr Global Variable
        '(of type gError)
27      Select Case gErr.Number
        Case Is = 53
29          sErrorMsg = gErr.Description
            'IDEAL Menu Error
        Case Else
32          sErrorMsg = "Error Occurred" & vbNewLine & vbNewLine
33          sErrorMsg = sErrorMsg & "Error No: " & CStr(gErr.Number) & vbNewLine
34          sErrorMsg = sErrorMsg & "Error Desc: '" & gErr.Description & "'" & vbNewLine
35          sErrorMsg = sErrorMsg & "Error Source: '" & gErr.Source & "'" & vbNewLine & vbNewLine
36          sErrorMsg = sErrorMsg & "Error Line:  '" & gErr.Erl & "'" & vbNewLine
37          If strProcName <> "" Then
38              sErrorMsg = sErrorMsg & "Procedure: '" & strProcName & "'" & vbNewLine
            End If
'40          sErrorMsg = sErrorMsg & "Please contact the IT & Change Helpdesk on ext 3133"
40          sErrorMsg = sErrorMsg & "Please contact the IT & Change Helpdesk on ext 4357"   'Satya 02.06.2015 - Changed under P3576
            
            'Bring up a message box with details of the error
        End Select
        
45       If gErr.Number <> 50018 And gErr.Number <> 50031 Then
            'Bring up a message box with details of the error
47          MsgBox sErrorMsg, vbExclamation + vbOKOnly, gsAPP_NO & " - Error!"
            
49           If gErr.Number = 50002 Or gErr.Number = 50001 Then
50                  Workbooks(ThisWorkbook.Name).Close SaveChanges:=False
            End If
        End If
51        Application.EnableEvents = True
52        Application.Calculation = xlCalculationAutomatic


53 If gsOffshoreUser = "Onshore Use" Then
        'Log the error
54        Call modUtility.RecordErrorLog
55    Else: End If ' no logging as spreadsheet is offshore and will return errors
    

61        Call Close_Annrates_files
70        Call modGlobals.Delete_Globals
    End Sub

        

